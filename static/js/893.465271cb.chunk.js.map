{"version":3,"file":"static/js/893.465271cb.chunk.js","mappings":"oLACA,MAA2B,2B,kDCA3B,EAAiC,6BAAjC,EAA6E,2BAA7E,EAAmH,uBAAnH,EAA0J,4B,kBC+B1J,EA5Ba,SAAC,GAA+C,IAA7CA,EAA4C,EAA5CA,iBAAkBC,EAA0B,EAA1BA,oBAChC,OAAOD,EAAiBE,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,OAAb,OAC1B,gBAAIC,UAAWC,EAA+BH,GAAIA,EAAlD,WACE,kCAAUD,MACV,eAAGG,UAAWC,EAAd,WACE,SAAC,MAAD,CAASD,UAAWC,IACnBF,GACD,SAAC,MAAD,CACEG,KAAK,SACLF,UAAWC,EACXE,QAAS,kBAAMR,EAAoBG,EAA1B,SARyBD,EADd,GAc7B,EClBD,GAAgB,YAAc,4BAA4B,gBAAkB,iCC2B5E,EAxBe,WACb,IAAMO,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACE,iCACE,sCACA,iBAAKR,UAAWC,EAAAA,OAAhB,WACE,kBAAOQ,QAAQ,SAAST,UAAWC,EAAAA,gBAAnC,oCAGA,kBACEC,KAAK,OACLJ,GAAG,SACHY,YAAY,YACZV,UAAWC,EAAAA,YACXU,SAAU,SAAAC,GAAC,OAAIR,GAASS,EAAAA,EAAAA,IAAUD,EAAEE,OAAOC,OAAhC,EACXA,MAAOT,SAKhB,E,UCjBD,EAPiB,kBACf,qBAASU,MAAO,CAAEC,UAAW,UAA7B,WACE,gBAAKC,IAAKC,EAAUC,IAAI,YAAYC,MAAO,IAAKC,OAAQ,OACxD,iDAHa,E,oBCgEjB,EAtDiB,WACf,IAAMlB,GAAWC,EAAAA,EAAAA,MACXkB,GAAehB,EAAAA,EAAAA,IAAYiB,EAAAA,IAC3BC,GAAYlB,EAAAA,EAAAA,IAAYmB,EAAAA,IACxBC,GAAcpB,EAAAA,EAAAA,IAAYC,EAAAA,KAEhCoB,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,MACV,GAAE,CAACzB,IAEJ,IAAMV,EAAmB6B,EAAaO,QAAO,SAAAC,GAAO,OAClDA,EAAQlC,KAAKmC,cAAcC,SAASN,EAAYK,cADE,IAoB9CE,EAAcX,EAAaY,OAAS,EAE1C,OACE,iCACE,SAAC,EAAD,IAECV,GACC,sCAEAS,IACE,eAAIlC,UAAWC,EAAf,UACE,SAAC,EAAD,CACEN,oBA5BgB,SAAAG,GAC1BsC,EAAAA,QAAAA,KACE,oBACA,gCACA,MACA,MACA,WACEhC,GAASiC,EAAAA,EAAAA,IAAcvC,IACvBwC,EAAAA,OAAAA,QAAA,gCAAgD,CAAEC,cAAc,GACjE,IACD,WACED,EAAAA,OAAAA,KAAY,qBAAsB,CAAEC,cAAc,GACnD,GAEJ,EAeW7C,iBAAkBA,OAMxB+B,IAAcS,IAAe,SAAC,EAAD,MAGpC,C","sources":["webpack://react-homework-template/./src/pages/ContactsPage/Contacts.module.css?4a20","webpack://react-homework-template/./src/components/Card/Card.module.css?4f06","components/Card/Card.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/NotFound/NotFound.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__oHtMx\",\"filterInput\":\"Contacts_filterInput__bAOM6\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"Card_contacts__item__9DfVu\",\"user__number\":\"Card_user__number__2vsct\",\"iconMoon\":\"Card_iconMoon__PIfaO\",\"contacts__btn\":\"Card_contacts__btn__Zo1Nf\"};","import CSS from './Card.module.css';\nimport { ImCross, ImPhone } from 'react-icons/im';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ filteredContacts, handleDeleteContact }) => {\n  return filteredContacts.map(({ name, id, number }) => (\n    <li className={CSS.contacts__item} key={name} id={id}>\n      <p>name: {name}</p>\n      <p className={CSS.user__number}>\n        <ImPhone className={CSS.iconMoon} />\n        {number}\n        <ImCross\n          type=\"button\"\n          className={CSS.contacts__btn}\n          onClick={() => handleDeleteContact(id)}\n        ></ImCross>\n      </p>\n    </li>\n  ));\n};\n\nCard.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"userForm__label\":\"Filter_userForm__label__CI043\"};","import CSS from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter, getFilterValue } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const formState = useSelector(getFilterValue); //state.filter\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <div className={CSS.filter}>\n        <label htmlFor=\"filter\" className={CSS.userForm__label}>\n          Find contacts by name\n        </label>\n        <input\n          type=\"text\"\n          id=\"filter\"\n          placeholder=\"Search...\"\n          className={CSS.filterInput}\n          onChange={e => dispatch(addFilter(e.target.value))}\n          value={formState}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Filter;\n","import emptyImg from 'images/noImage.webp';\n\nconst NotFound = () => (\n  <picture style={{ textAlign: 'center' }}>\n    <img src={emptyImg} alt=\"Not found\" width={250} height={250} />\n    <b>Phonebook is empty!</b>\n  </picture>\n);\n\nexport default NotFound;\n","import CSS from './Contacts.module.css';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from 'services/operations';\nimport { getLoadingValue } from 'redux/contactsSlice';\nimport { getFilterValue, selectContactsList } from 'redux/filterSlice';\nimport Card from 'components/Card/Card';\nimport Filter from 'components/Filter/Filter';\nimport NotFound from 'components/NotFound/NotFound';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contactsList = useSelector(selectContactsList);\n  const isLoading = useSelector(getLoadingValue);\n  const filterValue = useSelector(getFilterValue);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contactsList.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  const handleDeleteContact = id => {\n    Confirm.show(\n      'Deleteing Confirm',\n      'This contact will be deleted!',\n      'Yes',\n      'No',\n      () => {\n        dispatch(deleteContact(id));\n        Notify.success(`The contact has been deleted!`, { clickToClose: true });\n      },\n      () => {\n        Notify.info('Deletion canceled!', { clickToClose: true });\n      }\n    );\n  };\n\n  const hasContacts = contactsList.length > 0;\n\n  return (\n    <>\n      <Filter />\n\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        hasContacts && (\n          <ul className={CSS.contacts}>\n            <Card\n              handleDeleteContact={handleDeleteContact}\n              filteredContacts={filteredContacts}\n            />\n          </ul>\n        )\n      )}\n\n      {!isLoading && !hasContacts && <NotFound />}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["filteredContacts","handleDeleteContact","map","name","id","number","className","CSS","type","onClick","dispatch","useDispatch","formState","useSelector","getFilterValue","htmlFor","placeholder","onChange","e","addFilter","target","value","style","textAlign","src","emptyImg","alt","width","height","contactsList","selectContactsList","isLoading","getLoadingValue","filterValue","useEffect","fetchContacts","filter","contact","toLowerCase","includes","hasContacts","length","Confirm","deleteContact","Notify","clickToClose"],"sourceRoot":""}